package com.example.taskmanager.domain;


import jakarta.persistence.*;


/**
 * *******************************************************
 * Package: com.example.taskmanager.model
 * File: Task.java
 * Author: Ochwada
 * Date: Monday, 23.Jun.2025, 10:41 AM
 * Description: Represents a task in the system.
 * *  This entity is used to store task-related information such as  title, description, and completion status.
 * *  Mapped to the "tasks" table in the database.
 * Objective:
 * *******************************************************
 */

public class Task {

    /**
     * Unique identifier for the task.
     * Automatically generated by the database.
     */
    private Long id;

    private String title;

    private String description;

    private boolean completed;

    public Task() {
        // Required by JPA
    }

    /**
     * Full constructor used to initialize all fields of the task.
     *
     * @param id          the task's unique identifier
     * @param title       the task's title
     * @param description a detailed description of the task
     * @param completed   the task's completion status
     */
    public Task(Long id, String title, String description, boolean completed) {
        this.id = id;
        this.title = title;
        this.description = description;
        this.completed = completed;
    }

    public Task(Long id, String description, boolean completed) {
        this.id = id;
        this.description = description;
        this.completed = completed;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public boolean isCompleted() {
        return completed;
    }

    /**
     * Sets the task's completion status.
     *
     * @param completed true if completed, false otherwise
     */
    public void setCompleted(boolean completed) {
        this.completed = completed;
    }

    @Override
    public String toString() {
        return "Task{" +
                "description='" + this.description + '\'' +
                ", completed=" + this.completed +
                ", id=" + this.id +
                '}';
    }
}
